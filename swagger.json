{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server",
    "version": "1.0.0",
    "title": "Swagger TFG"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "login",
      "description": "Login"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/loginSuccess"
            }
          },
          "401": {
            "description": "operation fail",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          {
            "authorization": [
            ]
          }
        ]
      }
    },"/register": {
      "post": {
        "tags": [
          "register"
        ],
        "summary": "Register",
        "description": "",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/loginSuccess"
            }
          },
          "500": {
            "description": "operation fail",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          {
            "authorization": [
            ]
          }
        ]
      }
    },
    "/pdf": {
      "get": {
        "tags": [
          "pdf"
        ],
        "summary": "Get list of pdf from the user",
        "description": "This can only be done by the logged user.",
        "operationId": "getPDF",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "#definitions/getPDF"
          }
        }
      },
      "post": {
        "tags": [
          "pdf"
        ],
        "summary": "post a new PDF",
        "description": "This can only be done by the logged user.",
        "operationId": "postPDF",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PDF",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postPDF"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "500": {
            "description": "operation fail",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pdf"
        ],
        "summary": "update a PDF",
        "description": "This can only be done by the logged user.",
        "operationId": "putPDF",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PDF",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "operation fail",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "operation fail",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/pdf/:filename": {
      "get": {
        "tags": ["pdf"],
        "summary": "detail of PDF",
        "description": "This can only be done by the logged user.",
        "operationId": "detailPDF",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "authorization": {
      "type": "Authorization",
      "name": "Bearer",
      "in": "header"
    }
  },
  "definitions": {
    "login": {
      "type": "object",
      "properties": {
        "nick": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "loginSuccess": {
      "type":"object",
      "properties": {
        "accessToken": {
          "type":"string"
        },
        "tokenType": {
          "type": "string",
          "enum": ["Bearer" , "Token"]
        }
      }
    },
    "register": {
      "type": "object",
      "properties": {
        "nick": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "hash"
        },
        "name": "string",
        "surname": "string"
      }
    },
    "getPDF": {
      "type": "object",
      "properties": {}
    },
    "postPDF": {
      "type": "object",
      "properties": {}
    },
    "putPDF": {
      "type": "object",
      "properties": {}
    },
    "error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number"
        },
		    "message": {
          "type": "string"
        }
      }
    }
  }
}